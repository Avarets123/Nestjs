version: '3'

services:

  backend:
    container_name: project-backend
    build: ./backend
    command: npm run start
    restart: unless-stopped
    ports:
      - "3001:3001"
    networks:
      - single-network
    environment:
      - POSTGRES_HOST=db_postgres
      - POSTGRES_PORT=5432
      - PORT=3001
    depends_on:
      - db_postgres
      - frontend

  frontend:
    container_name: project-frontend
    build: ./frontend
    ports:
      - "3000:3000"
    command: serve -s build -l 3000
    restart: unless-stopped
    networks:
      - single-network
    depends_on:
      - backend

  # nginx:
  #   image: nginx:stable-alpine
  #   container_name: project-nginx
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
  #   depends_on:
  #     - frontend
  #     - backend
  #     - db_postgres
  #   networks:
  #     - single-network

  db_postgres:
    container_name: project-database
    restart: always
    environment:
      - POSTGRES_USER=osman
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=first
    image: postgres:14.3-alpine
    networks:
      - single-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
networks:
  single-network:
    driver: bridge

volumes:
  postgres_data:
